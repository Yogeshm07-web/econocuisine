<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Budget Page</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    /* Custom styles */
    .header-section {
      text-align: center;
      margin-bottom: 20px;
    }
    .card {
      margin-bottom: 20px;
      border: 2px solid #ccc; /* Light gray border */
      background-color: #f0f0f0; /* Light gray background color */
      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.1); /* Soft shadow for glossy effect */
    }
    .card-body {
      padding: 20px; /* Add padding for better appearance */
    }
    .input-group-prepend, .input-group-append {
      min-width: 100px;
    }
    .chart-container {
      height: 300px;
    }
    .remaining-balance {
      color: #007bff; /* Set the color to match the pie chart color */
    }
    .transparent-bg {
      background-color: rgba(255, 255, 255, 0.8); /* Transparent white background */
      padding: 10px; /* Add padding for better readability */
    }
    .container {
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Shadow for the container */
      padding: 20px; /* Add padding to the container */
    }
    .row {
      margin-bottom: 20px; /* Add margin between rows */
    }
  </style>
</head>
<body>
  <div class="header-section transparent-bg">
    <h1><b>Budget Page</b></h1>
    <a href="/" class="home-link">
      <span class="home-icon">üè†</span>
    </a>
  </div>
  <div class="container transparent-bg">
    <div class="row">
      <div class="col-md-6">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title">Budget Overview</h4>
            <div class="form-group">
              <label for="totalIncomeInput">My Budget for Groceries</label>
              <div class="input-group">
                <input type="number" id="totalIncomeInput" class="form-control" placeholder="Enter total income" required>
                <div class="input-group-append">
                  <button type="button" class="btn btn-primary" onclick="editField('totalIncome')">Edit</button>
                  <button type="button" class="btn btn-danger" onclick="deleteField('totalIncome')">Delete</button>
                  <button type="button" class="btn btn-success" onclick="saveField('totalIncome')">Save</button>
                </div>
              </div>
            </div>
            <div class="form-group">
              <label for="totalBasketPriceInput">Total Basket Price</label>
              <div class="input-group">
                <input type="number" id="totalBasketPriceInput" class="form-control" placeholder="Enter basket price">
                <div class="input-group-append">
                  <button type="button" class="btn btn-primary" onclick="editField('totalBasketPrice')">Edit</button>
                  <button type="button" class="btn btn-danger" onclick="deleteField('totalBasketPrice')">Delete</button>
                  <button type="button" class="btn btn-success" onclick="saveField('totalBasketPrice')">Save</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title">Pie Chart</h4>
            <div class="chart-container">
              <canvas id="budgetPieChart"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title">Remaining Balance</h4>
            <div id="remainingBalanceDisplay" class="remaining-balance transparent-bg"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
</html>

<script>
  // JavaScript functions for handling dynamic fields
  function editField(fieldName) {
    const fieldValue = document.getElementById(`${fieldName}Input`).value;
    console.log(`Editing ${fieldName}: ${fieldValue}`);
  }

  function deleteField(fieldName) {
    console.log(`Deleting ${fieldName}`);
    document.getElementById(`${fieldName}Input`).value = '';
    updatePieChart(); // You may remove this line if it's not necessary
  }

  function saveField(fieldName) {
    const fieldValue = parseFloat(document.getElementById(`${fieldName}Input`).value) || 0;
    console.log(`Saving ${fieldName}: ${fieldValue}`);
    
    // Save the field value in local storage
    localStorage.setItem(fieldName, fieldValue);

    // Update all relevant parts of the page
    updatePage();
  }

  function loadField(fieldName) {
    // Load the field value from local storage
    const fieldValue = localStorage.getItem(fieldName) || '';

    document.getElementById(`${fieldName}Input`).value = fieldValue;
  }

  function calculateRemainingBalance() {
    const totalIncome = parseFloat(document.getElementById('totalIncomeInput').value) || 0;
    const totalBasketPrice = parseFloat(document.getElementById('totalBasketPriceInput').value) || 0;
    const remainingBalance = totalIncome - totalBasketPrice;
    document.getElementById('remainingBalanceDisplay').textContent = `Remaining Balance: Rs${remainingBalance}`;
    return remainingBalance;
  }

  function updatePieChart() {
    console.log('updatePieChart function called');

    const totalIncome = parseFloat(document.getElementById('totalIncomeInput').value) || 0;
    const totalBasketPrice = parseFloat(document.getElementById('totalBasketPriceInput').value) || 0;
    const remainingBalance = totalIncome - totalBasketPrice;

    console.log('totalIncome:', totalIncome);
    console.log('totalBasketPrice:', totalBasketPrice);
    console.log('remainingBalance:', remainingBalance);

    const ctx = document.getElementById('budgetPieChart').getContext('2d');
    const myChart = new Chart(ctx, {
      type: 'pie',
      data: {
        labels: ['My Budget for Groceries', 'Total Basket Price', 'Remaining Balance'],
        datasets: [{
          label: 'Amount (Rs)',
          data: [totalIncome, totalBasketPrice, remainingBalance],
          backgroundColor: [
            'rgba(54, 162, 235, 0.5)',
            'rgba(255, 206, 86, 0.5)',
            'rgba(75, 192, 192, 0.5)',
          ],
          borderColor: [
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false, // Allow the chart to be responsive
      }
    });
  }

  function updatePage() {
    // Update the remaining balance display
    calculateRemainingBalance();

    // Update the pie chart
    updatePieChart();
  }

  window.onload = function() {
    // Load field values from local storage
    loadField('totalIncome');
    loadField('totalBasketPrice');

    updatePage();
  }
</script>
