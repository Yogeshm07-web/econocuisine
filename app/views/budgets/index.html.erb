<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Budget Page</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-image: url('https://trabian-canvas-prd-files.s3.amazonaws.com/lacapfcu-org/files/image/food_budget.png?VersionId=YX2RVUjmssWmYJ0oepId93GwmHVT2S3J');
      background-size: cover;
      background-position: center;
          
    }
     .header-section {
      background-color: rgba(0, 0.5, 21, 0.5); /* Semi-transparent blue background */
      color: #fff;
      padding: 00px;
      text-align: center;
    }
    .container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white background */
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      border-radius: 8px;
    }
    .card {
      margin-bottom: 20px;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .card-body {
      padding: 20px;
    }
    .form-group {
      margin-bottom: 20px;
    }
    .input-group {
      display: flex;
      align-items: center;
    }
    .input-group input {
      flex: 1;
      border: 1px solid #ccc;
      border-radius: 4px;
      padding: 8px;
      margin-right: 5px;
    }
    .input-group button {
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .chart-container {
      height: 300px;
    }
    .remaining-balance {
      text-align: center;
      font-size: 18px;
      color: #007bff;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <div class="header-section">
    <h1>Budget Page</h1>
    <a href="/" style="color: #fff; text-decoration: none;">
      <span style="font-size: 24px;">üè†</span>
    </a>
  </div>
  <div class="container">
    <div class="card">
      <div class="card-body">
        <h2>Budget Overview</h2>
        <div class="form-group">
          <label for="totalIncomeInput">My Budget for Groceries</label>
          <div class="input-group">
            <input type="number" id="totalIncomeInput" placeholder="Enter total income" required>
            <button onclick="editField('totalIncome')">Edit</button>
            <button onclick="deleteField('totalIncome')">Delete</button>
            <button onclick="saveField('totalIncome')">Save</button>
          </div>
        </div>
        <div class="form-group">
          <label for="totalBasketPriceInput">Total Basket Price</label>
          <div class="input-group">
            <input type="number" id="totalBasketPriceInput" placeholder="Enter basket price">
            <button onclick="editField('totalBasketPrice')">Edit</button>
            <button onclick="deleteField('totalBasketPrice')">Delete</button>
            <button onclick="saveField('totalBasketPrice')">Save</button>
          </div>
        </div>
      </div>
    </div>
    <div class="card">
      <div class="card-body">
        <h2>Pie Chart</h2>
        <div class="chart-container">
          <canvas id="budgetPieChart"></canvas>
        </div>
      </div>
    </div>
    <div class="card">
      <div class="card-body">
        <h2>Remaining Balance</h2>
        <div id="remainingBalanceDisplay" class="remaining-balance"></div>
        <%= link_to 'View Reviews', reviews_path(pie_chart_data: @pie_chart_data) %>
      </div>
    </div>
  </div>

  <script>
  // JavaScript functions for handling dynamic fields
  function editField(fieldName) {
    const fieldValue = document.getElementById(`${fieldName}Input`).value;
    console.log(`Editing ${fieldName}: ${fieldValue}`);
  }

  function deleteField(fieldName) {
    console.log(`Deleting ${fieldName}`);
    document.getElementById(`${fieldName}Input`).value = '';
    updatePieChart(); // You may remove this line if it's not necessary
  }

  // JavaScript functions for handling dynamic fields
  function editField(fieldName) {
    const fieldValue = document.getElementById(`${fieldName}Input`).value;
    console.log(`Editing ${fieldName}: ${fieldValue}`);
  }

  function deleteField(fieldName) {
    console.log(`Deleting ${fieldName}`);
    document.getElementById(`${fieldName}Input`).value = '';
    updatePieChart(); // You may remove this line if it's not necessary
  }

  function saveField(fieldName) {
    const fieldValue = parseFloat(document.getElementById(`${fieldName}Input`).value) || 0;
    console.log(`Saving ${fieldName}: ${fieldValue}`);
    
    // Save the field value in local storage
    localStorage.setItem(fieldName, fieldValue);

    // Update all relevant parts of the page
    updatePage();

    // Send AJAX request to Rails backend
    fetch('/budget_data', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      },
      body: JSON.stringify({ field_name: fieldName, field_value: fieldValue })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      console.log('Response from server:', data);
      // Update all relevant parts of the page
      updatePage();
    })
    .catch(error => {
      console.error('Error saving field:', error);
    });
  }

  function loadField(fieldName) {
    // Load the field value from local storage
    const fieldValue = localStorage.getItem(fieldName) || '';

    document.getElementById(`${fieldName}Input`).value = fieldValue;
  }

  function calculateRemainingBalance() {
    const totalIncome = parseFloat(document.getElementById('totalIncomeInput').value) || 0;
    const totalBasketPrice = parseFloat(document.getElementById('totalBasketPriceInput').value) || 0;
    const remainingBalance = totalIncome - totalBasketPrice;
    document.getElementById('remainingBalanceDisplay').textContent = `Remaining Balance: Rs${remainingBalance}`;
    return remainingBalance;
  }

  function updatePieChart() {
    console.log('updatePieChart function called');

    const totalIncome = parseFloat(document.getElementById('totalIncomeInput').value) || 0;
    const totalBasketPrice = parseFloat(document.getElementById('totalBasketPriceInput').value) || 0;
    const remainingBalance = totalIncome - totalBasketPrice;

    console.log('totalIncome:', totalIncome);
    console.log('totalBasketPrice:', totalBasketPrice);
    console.log('remainingBalance:', remainingBalance);

    const ctx = document.getElementById('budgetPieChart').getContext('2d');
    const myChart = new Chart(ctx, {
      type: 'pie',
      data: {
        labels: ['My Budget for Groceries', 'Total Basket Price', 'Remaining Balance'],
        datasets: [{
          label: 'Amount (Rs)',
          data: [totalIncome, totalBasketPrice, remainingBalance],
          backgroundColor: [
            'rgba(54, 162, 235, 0.5)',
            'rgba(255, 206, 86, 0.5)',
            'rgba(75, 192, 192, 0.5)',
          ],
          borderColor: [
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false, // Allow the chart to be responsive
      }
    });
  }

  function updatePage() {
    // Update the remaining balance display
    calculateRemainingBalance();

    // Update the pie chart
    updatePieChart();
  }

  window.onload = function() {
    // Load field values from local storage
    loadField('totalIncome');
    loadField('totalBasketPrice');

    updatePage();
  }
</script>